# Task ID: 12
# Title: 브라우저 감지 및 조건부 로딩 구현
# Status: done
# Dependencies: 3, 4, 5, 6, 7
# Priority: medium
# Description: Create a system to detect IE11 and conditionally load appropriate implementation
# Details:
1. Implement reliable IE11 detection
2. Create a conditional loading system that loads the appropriate implementation
3. Ensure only necessary polyfills are loaded in IE11
4. Prevent loading IE11-specific code in modern browsers
5. Implement feature detection as a fallback
6. Create a unified API entry point that works across all browsers

Example browser detection and conditional loading:
```javascript
function detectIE11() {
  var ua = window.navigator.userAgent;
  return ua.indexOf('Trident/') > 0 && ua.indexOf('rv:11') > 0;
}

function loadOpenTelemetry() {
  if (detectIE11()) {
    // Load IE11 version with polyfills
    var polyfillScript = document.createElement('script');
    polyfillScript.src = 'https://cdn.example.com/opentelemetry-polyfills.js';
    polyfillScript.onload = function() {
      var ieScript = document.createElement('script');
      ieScript.src = 'https://cdn.example.com/opentelemetry-ie11.js';
      document.head.appendChild(ieScript);
    };
    document.head.appendChild(polyfillScript);
  } else {
    // Load modern version
    var script = document.createElement('script');
    script.src = 'https://cdn.example.com/opentelemetry.js';
    document.head.appendChild(script);
  }
}

// Alternative using dynamic import (with fallback for IE11)
function loadOpenTelemetryModule() {
  if (detectIE11()) {
    // IE11 doesn't support dynamic import, use a pre-bundled UMD version
    var script = document.createElement('script');
    script.src = 'https://cdn.example.com/opentelemetry-ie11.js';
    script.onload = function() {
      initializeOpenTelemetry(window.opentelemetry);
    };
    document.head.appendChild(script);
  } else {
    // Modern browsers can use dynamic import
    import('https://cdn.example.com/opentelemetry.js')
      .then(function(module) {
        initializeOpenTelemetry(module);
      });
  }
}
```

# Test Strategy:
1. Test browser detection with various IE11 user agent strings
2. Verify correct version is loaded in different browsers
3. Test loading performance in IE11
4. Verify polyfills are only loaded when needed
5. Test with different loading scenarios (async, defer, dynamic)
6. Verify the API works consistently across browsers
7. Test with browser spoofing to ensure robust detection
