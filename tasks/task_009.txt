# Task ID: 9
# Title: 모듈 시스템 호환성 구현
# Status: done
# Dependencies: 1, 2
# Priority: high
# Description: Ensure the library works with IE11 compatible module systems and bundling
# Details:
1. Replace ESM imports/exports with UMD/IIFE compatible format
2. Remove dynamic imports and replace with static alternatives
3. Configure bundler to generate IE11 compatible bundles
4. Implement a global namespace fallback for script tag inclusion
5. Optimize tree shaking for IE11 bundle
6. Create separate entry points for different feature sets
7. Implement conditional loading strategy for polyfills

Example UMD wrapper:
```javascript
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['exports', '@opentelemetry/api'], factory);
  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {
    // CommonJS
    factory(exports, require('@opentelemetry/api'));
  } else {
    // Browser globals
    factory((root.opentelemetry = root.opentelemetry || {}), root.opentelemetry.api);
  }
}(typeof self !== 'undefined' ? self : this, function (exports, api) {
  // Library code here
  exports.createTracer = function(name, version) {
    // Implementation
  };
}));
```

Example webpack configuration:
```javascript
module.exports = {
  output: {
    filename: 'opentelemetry-ie11.js',
    library: ['opentelemetry', '[name]'],
    libraryTarget: 'umd'
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [
              ['@babel/preset-env', {
                targets: {
                  ie: '11'
                },
                useBuiltIns: 'usage',
                corejs: 3
              }]
            ]
          }
        }
      }
    ]
  },
  optimization: {
    minimize: true
  }
};
```

# Test Strategy:
1. Test library loading in various module environments (script tag, AMD, CommonJS)
2. Verify global namespace doesn't conflict with other libraries
3. Test bundle size and loading performance
4. Verify tree shaking effectiveness
5. Test conditional polyfill loading
6. Verify the library works when loaded in different ways
7. Test with various bundlers and build systems
